.figmaFrame {
    position: relative;
    width: 100vw;
    max-width: 100vw;
    min-width: 320px;
    min-height: 100vh;
    height: 100vh;
    background: #fff;
    overflow: hidden;
    font-family: 'Segoe UI', Arial, sans-serif;
}

/* Main background rectangle */
.mainBackground {
    position: relative;
    /* for stacking inside .figmaFrame */
    margin: 2% auto;
    top: 8vw;
    left: 0;
    width: 95vw;
    max-width: 600px;
    min-width: 290px;
    box-sizing: border-box;
    min-height: 320px;
    background: #fff;
    border: 2px solid #000;
    border-radius: 30px;
    box-shadow: 0 8px 32px 0 rgba(36, 50, 85, 0.09);
    display: flex;
    flex-direction: column;
    z-index: 3;
    padding: 0 0 2.5em 0;
}
/* Wraps the actual converter UI fields */
/* 
 * Make .converterArea spatially robust on large screens:
 * - Use extra spacing/gaps at >1200px
 * - Prevent overlap with labels, fields, and decorative elements
 * - Retain responsive compactness at lower widths
 */
.converterArea {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    padding: 2.2em 2.2em 1em 2.2em;
    background: transparent;
    border-radius: 24px;
    box-sizing: border-box;
    z-index: 3;
    margin-top: 0;
}

@media (min-width: 1200px) {
    .converterArea {
        padding: 3.2em 3.2em 1.8em 3.2em;
        max-width: 1050px;
        min-width: 660px;
        margin: 0 auto;
        box-shadow: 0 10px 38px 0 rgba(36, 50, 85, 0.11);
    }
}
/* Row for input/output labels and switch */
.labelsRow {
    display: flex;
    align-items: flex-end;
    width: 100%;
    justify-content: space-between;
    gap: 2.4em;
    margin-bottom: 0.8em;
    position: relative;
    z-index: 4;
}
@media (min-width: 1200px) {
    .labelsRow {
        gap: 4em;
        margin-bottom: 1.2em;
        padding-right: 3em;
        padding-left: 1em;
    }
}
.inputLabel, .outputLabel {
    font-size: 1.1rem;
    color: #111;
    font-weight: bold;
    margin-bottom: 0.1em;
    position: static !important;
    left: unset !important;
    top: unset !important;
    width: auto !important;
    height: auto !important;
    z-index: 1 !important;
    background: transparent;
    padding: 2px 4px 1px 0;
}

@media (min-width: 1200px) {
    .inputLabel, .outputLabel {
        font-size: 1.28rem;
        min-width: 130px;
        text-align: left;
        margin-bottom: 0.18em;
        margin-top: 0.15em;
        letter-spacing: 0.03em;
    }
}
.labelsRow .inputLabel {
    order: 0;
}
.labelsRow .outputLabel {
    order: 1;
}
.modeBtn {
    background: #1976d2;
    color: #fff;
    border: none;
    border-radius: 18px;
    padding: 0.4em 0.9em;
    font-weight: 500;
    font-size: 1.05em;
    margin-left: auto;
    cursor: pointer;
    transition: background 0.22s, color 0.18s;
    margin-right: 0.2em;
    outline: none;
}
.modeBtn:active, .modeBtn:focus {
    background: #0a41a4;
    color: #ffeb3b;
}
.areasWrap {
    display: flex;
    flex-direction: column;
    gap: 1.45em;
    z-index: 6;
}

@media (min-width: 1200px) {
    .areasWrap {
        gap: 2em;
    }
}
.inputArea {
    width: 100%;
    background: #f6f9fb;
    border-radius: 14px;
    padding: 1.2em 1em;
    margin-bottom: 0.2em;
    font-size: 1.1em;
    min-height: 70px;
    border: 1px solid #e6e6e6;
    color: #222;
    outline-color: #1976d2;
    font-family: inherit;
    resize: vertical;
    transition: border 0.2s;
    z-index: 7;
    position: relative;
}

@media (min-width: 1200px) {
    .inputArea {
        font-size: 1.19em;
        min-height: 90px;
        padding: 1.5em 1.15em;
        margin-bottom: 0.5em;
        border-radius: 17px;
    }
}
.inputArea:focus {
    border-color: #1976d2;
}
.outputAreaBox {
    width: 100%;
    display: flex;
    background: none;
    align-items: flex-start;
    gap: 0.6em;
    margin-bottom: 0.2em;
    z-index: 7;
}

@media (min-width: 1200px) {
    .outputAreaBox {
        gap: 1.3em;
        margin-bottom: 0.5em;
        padding-right: 2em;
        padding-left: 0.2em;
    }
}
.outputArea {
    width: 100%;
    background: #fafbfd;
    border-radius: 14px;
    min-height: 2.3em;
    font-size: 1.1em;
    color: #151515;
    padding: 1.2em 1em;
    border: 1px solid #e5e8ea;
    word-break: break-word;
    user-select: text;
    overflow: auto;
    pointer-events: none;
    transition: border .18s;
    position: relative;
    z-index: 7;
}

@media (min-width: 1200px) {
    .outputArea {
        font-size: 1.18em;
        min-height: 90px;
        border-radius: 17px;
        padding: 1.5em 1.15em;
    }
}
.copyBtn {
    min-width: 70px;
    height: 40px;
    font-size: 0.99em;
    letter-spacing: .03em;
    color: #1976d2;
    background: #e3f0fa;
    border: none;
    border-radius: 10px;
    margin-left: 0.5em;
    align-self: flex-start;
    cursor: pointer;
    font-weight: 500;
    transition: background 0.18s, color 0.18s;
    z-index: 2;
}

@media (min-width: 1200px) {
    .copyBtn {
        min-width: 90px;
        height: 44px;
        font-size: 1.08em;
        margin-left: 1.3em;
        border-radius: 13px;
        padding: 0 18px;
    }
}
.copyBtn:active, .copyBtn:focus {
    background: #1976d2;
    color: #fff;
}
.copyBtn[disabled] {
    color: #bdbdbd !important;
    background: #f5f5f5 !important;
    cursor: not-allowed;
}
/* Placeholders and background labels in absolute, hide on small */
.figmaAbs {
    display: none !important;
}
.inputPlaceholder, .outputPlaceholder {
    /* On desktop, can appear, but always hide at â‰¤1020px via responsive below */
    position: absolute;
    left: 120px;
    font-size: 1.2em;
    color: #a7a7a7;
    width: 503px;
    height: 48px;
    z-index: 1;
    white-space: nowrap;
    pointer-events: none;
}
.inputPlaceholder {
    top: 163px;
}
.outputPlaceholder {
    top: 548px;
}

/* Make absolutely sure abs-text is never visible nor interactable on non-desktop: */
@media (max-width: 1020px) {
    .inputPlaceholder, .outputPlaceholder, .figmaAbs,
    .inputLabel:not(.labelsRow .inputLabel),
    .outputLabel:not(.labelsRow .outputLabel) {
        display: none !important;
    }
}

/* Increase specificity to always show the converter panel's flowing labels at all sizes */
.labelsRow .inputLabel,
.labelsRow .outputLabel {
    display: block !important;
    position: static !important;
    font-size: 1.1rem !important;
    color: #111 !important;
    background: none !important;
    margin-bottom: 0.1em !important;
    margin-top: 0 !important;
    padding: 0 !important;
    width: auto !important;
    height: auto !important;
    left: unset !important;
    top: unset !important;
    z-index: unset !important;
}
/* Figma visual rectangles for keys - preserved, mobile: collapse */
.rectKey {
    position: absolute;
    background: #000;
    border-radius: 30px;
    z-index: 0;
}
.rectKey1 {
    left: 80vw;
    top: 82vh;
    width: 8vw;
    min-width: 70px;
    height: 9vh;
    min-height: 80px;
}
.rectKey2 {
    left: 86vw;
    top: 82vh;
    width: 8vw;
    min-width: 70px;
    height: 9vh;
    min-height: 80px;
}
.rectKey3 {
    left: 92vw;
    top: 82vh;
    width: 8vw;
    min-width: 70px;
    height: 9vh;
    min-height: 80px;
}
.rectKey4 {
    left: 98vw;
    top: 82vh;
    width: 8vw;
    min-width: 70px;
    height: 9vh;
    min-height: 80px;
}
.polygonKey {
    position: absolute;
    left: 81vw;
    top: 85vh;
    width: 4vw;
    min-width: 38px;
    height: 38px;
    max-width: 55px;
    background: #fff;
    border-radius: 3px;
    border: 1px solid #000;
}
.logoTitleGroup {
    position: absolute;
    left: 72vw;
    top: 6vh;
    width: 21vw;
    min-width: 160px;
    height: 30px;
    object-fit: contain;
}
.group1 {
    position: absolute;
    left: 76vw;
    top: 87vh;
    width: 35px;
    height: 51px;
}
.vectorGraphic {
    position: absolute;
    left: 96vw;
    top: 87vh;
    width: 35px;
    height: 51px;
    background: url('https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/528318b7-3777-489c-b5eb-cb3e55b5f7d9') no-repeat center center;
    background-size: contain;
}
.rectKey5 {
    position: absolute;
    left: 89vw;
    top: 87vh;
    width: 50px;
    height: 50px;
    background: #fff;
    border-radius: 3px;
    border: 1px solid #000;
}
.keyRow {
    position: absolute;
    left: 80vw;
    width: 600px;
    height: 98px;
    z-index: 10;
}
.keyRow img {
    width: 100%;
    height: auto;
}
/* Responsive logic: stack/narrow, reduce Figma keys on mobile, show only converter fields */
/* Responsive reductions for screens up to 1020px width */
@media (max-width: 1020px) {
    .mainBackground {
        max-width: 98vw !important;
        min-width: 0;
        left: 0 !important;
        top: 0.6rem !important;
        padding-left: 0.2em !important;
        padding-right: 0.2em !important;
        border-radius: 14px !important;
        box-shadow: 0 3px 10px 0 #ededed !important;
    }
    .converterArea {
        padding: 1.2em 0.6em 1em 0.6em !important;
        min-width: 0 !important;
        max-width: 99vw !important;
        margin: 0 !important;
    }
    .labelsRow {
        flex-direction: column !important;
        gap: 0.7em !important;
        align-items: stretch !important;
        margin-bottom: 0.6em !important;
        padding-right: 0 !important;
        padding-left: 0 !important;
    }
    .labelsRow label {
        width: 100% !important;
        text-align: left !important;
        font-size: 1em !important;
        min-width: 0 !important;
    }
    .outputAreaBox {
        flex-direction: column !important;
        gap: 0.6em !important;
        align-items: stretch !important;
        padding-right: 0 !important;
        padding-left: 0 !important;
    }
    .copyBtn {
        min-width: unset !important;
        align-self: stretch !important;
        margin-left: 0 !important;
    }
    .logoTitleGroup, .group1, .rectKey, .polygonKey, .vectorGraphic, .rectKey5, .keyRow, .figmaAbs,
    .inputLabel:not(.labelsRow .inputLabel), .outputLabel:not(.labelsRow .outputLabel),
    .inputPlaceholder, .outputPlaceholder {
        /* Hide all Figma decor and absolute text placeholders at non-desktop widths for usable UI */
        display: none !important;
    }
}

/* Further tighten/stack at small screens */
@media (max-width: 700px) {
    .mainBackground {
        max-width: 99vw !important;
        min-width: 0;
        left: 0 !important;
        top: 0.1rem !important;
        border-radius: 10px !important;
        box-shadow: 0 1px 7px 0 #eee !important;
        padding: 0.3em 0.1em 0.5em 0.1em !important;
    }
    .converterArea {
        padding: 0.8em 0.25em 0.5em 0.25em !important;
    }
    .inputArea, .outputArea {
        font-size: 0.98em !important;
        padding: 0.7em 0.5em !important;
    }
    .labelsRow label {
        font-size: 1em !important;
    }
    .labelsRow {
        gap: 0.5em !important;
    }
    .inputLabel, .outputLabel {
        font-size: 1em !important;
        height: auto !important;
        width: 100% !important;
        left: unset !important; /* disable absolute placement */
        top: unset !important;
        position: static !important;
    }
    .outputAreaBox {
        gap: 0.4em !important;
    }
}

/* Fix any overflow or crowding on ultra-small devices */
@media (max-width: 430px) {
    .converterArea {
        padding: 0.5em 0.05em 0.2em 0.05em !important;
    }
    .mainBackground {
        padding: 0.1em !important;
        border-radius: 7px !important;
    }
    .labelsRow {
        font-size: 0.97em !important;
    }
    .inputArea, .outputArea {
        font-size: 0.91em !important;
        padding: 0.65em 0.35em !important;
    }
}

/* Always ensure absolute Figma decor never overlaps converter on <1020px */
@media (max-width: 1020px) {
    .rectKey, .rectKey1, .rectKey2, .rectKey3, .rectKey4, .rectKey5,
    .logoTitleGroup, .vectorGraphic, .group1, .keyRow, .polygonKey {
        display: none !important;
    }
}
/* Everything */
.figmaFrame * {
    box-sizing: border-box;
}

/* EXTRA LARGE DESKTOP: New desktop-only bezel to avoid overlap even on 4k and ultra-wide */
@media (min-width: 1700px) {
    .mainBackground {
        max-width: 1100px !important;
        margin-left: auto;
        margin-right: auto;
        left: 0 !important;
        right: 0 !important;
        top: 7vw;
        min-height: 520px;
        box-shadow: 0 18px 60px 0 rgba(40, 60, 90, 0.13);
    }
    .converterArea {
        min-width: 760px;
        max-width: 1020px;
        padding-left: 4.2em;
        padding-right: 4.2em;
    }
    .labelsRow {
        gap: 6.1em;
        margin-bottom: 2em;
        padding-right: 4.2em;
        padding-left: 2.2em;
    }
    .areasWrap {
        gap: 2.5em;
    }
    .copyBtn {
        min-width: 120px;
        height: 54px;
        font-size: 1.13em;
        margin-left: 2em;
    }
    .inputArea, .outputArea {
        min-height: 120px;
        font-size: 1.28em;
    }
}

/* Labels */
.inputLabel {
    position: absolute;
    left: 94px;
    top: 85px;
    font-size: 32px;
    color: #000;
    font-weight: bold;
    width: 135px;
    height: 46px;
    z-index: 1;
}
.outputLabel {
    position: absolute;
    left: 94px;
    top: 470px;
    font-size: 32px;
    color: #000;
    font-weight: bold;
    width: 135px;
    height: 46px;
    z-index: 1;
}
.inputPlaceholder {
    position: absolute;
    left: 120px;
    top: 163px;
    font-size: 28px;
    color: #a7a7a7;
    width: 503px;
    height: 48px;
    z-index: 1;
}
.outputPlaceholder {
    position: absolute;
    left: 120px;
    top: 548px;
    font-size: 28px;
    color: #a7a7a7;
    width: 503px;
    height: 48px;
    z-index: 1;
}

/* Key rectangles */
.rectKey {
    position: absolute;
    background: #000;
    border-radius: 30px;
}
.rectKey1 {
    left: 1227px;
    top: 872px;
    width: 120px;
    height: 114px;
}
.rectKey2 {
    left: 1387px;
    top: 872px;
    width: 120px;
    height: 114px;
}
.rectKey3 {
    left: 1547px;
    top: 872px;
    width: 120px;
    height: 114px;
}
.rectKey4 {
    left: 1707px;
    top: 872px;
    width: 120px;
    height: 114px;
}

/* Polygon as button/arrow */
.polygonKey {
    position: absolute;
    left: 1259px;
    top: 901px;
    width: 55px;
    height: 55px;
    background: #fff;
    border-radius: 3px;
    border: 1px solid #000;
}

/* Logo/title group image */
.logoTitleGroup {
    position: absolute;
    left: 1395px;
    top: 107px;
    width: 430px;
    height: 30px;
}

/* Group 1 (keyboard/group button) */
.group1 {
    position: absolute;
    left: 1430px;
    top: 904px;
    width: 35px;
    height: 51px;
}

/* Generic vector, as placeholder for now */
.vectorGraphic {
    position: absolute;
    left: 1750px;
    top: 904px;
    width: 35px;
    height: 51px;
    background: url('https://figma-alpha-api.s3.us-west-2.amazonaws.com/images/528318b7-3777-489c-b5eb-cb3e55b5f7d9') no-repeat center center;
    background-size: contain;
}

/* Another small key */
.rectKey5 {
    position: absolute;
    left: 1582px;
    top: 904px;
    width: 50px;
    height: 50px;
    background: #fff;
    border-radius: 3px;
    border: 1px solid #000;
}

/* Key rows/groups (as images for now) */
.keyRow {
    position: absolute;
    left: 1227px;
    width: 600px;
    height: 98px;
    z-index: 10;
}

/* All elements crisp on large canvas */
.figmaFrame * {
    box-sizing: border-box;
}
